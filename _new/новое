Рассмотреть вариант настройки моделей как:
	protected $table		= 'activities';
	protected $key			= 'activity_id';
	protected $soft_deletes	= false;
	protected $date_format	= 'datetime';
	protected $set_created	= true;
	protected $set_modified = false;


Добавить класс adminTemplate для разруливания интерфейсом админки - туллбарами, шапками и прочими базовыми ништяками

Добавить возможность указывать пути автозагрузчика:
 * - Single Files AutoLoader::addFile('Blog','/path/to/Blog.php');
 * - Multiple Files AutoLoader::addFile(array('Blog'=>'/path/to/Blog.php','Post'=>'/path/to/Post.php'));
 * - Whole Folders AutoLoader::addFolder('path');

Добавить новый тип пользователя - мегадамин, информация о котором записывается в файле конфигурации, и он может авторизовываться и настраивать систему даже без создания и наличия базы данных.

Поушчение ULL:
		// If PHP_SELF and REQUEST_URI are both populated then we will assume "Apache Mode".
		if (!empty($_SERVER['PHP_SELF']) && !empty($_SERVER['REQUEST_URI']))
		{
			// The URI is built from the HTTP_HOST and REQUEST_URI environment variables in an Apache environment.
			$uri = $scheme . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
		}
		// If not in "Apache Mode" we will assume that we are in an IIS environment and proceed.
		else
		{
			// IIS uses the SCRIPT_NAME variable instead of a REQUEST_URI variable... thanks, MS
			$uri = $scheme . $_SERVER['HTTP_HOST'] . $_SERVER['SCRIPT_NAME'];

			// If the QUERY_STRING variable exists append it to the URI string.
			if (isset($_SERVER['QUERY_STRING']) && !empty($_SERVER['QUERY_STRING']))
			{
				$uri .= '?' . $_SERVER['QUERY_STRING'];
			}
		}

Текущий сервер:
		static $base;

		// Get the base request path
		if (!isset($base))
		{
			$config =& JFactory::getConfig();
			$live_site = $config->getValue('config.live_site');
			if(trim($live_site) != '') {
				$uri =& JURI::getInstance($live_site);
				$base['prefix'] = $uri->toString( array('scheme', 'host', 'port'));
				$base['path'] = rtrim($uri->toString( array('path')), '/\\');
				if(JPATH_BASE == JPATH_ADMINISTRATOR) {
					$base['path'] .= '/administrator';
				}
			} else {
				$uri	         =& JURI::getInstance();
				$base['prefix'] = $uri->toString( array('scheme', 'host', 'port'));

				if (strpos(php_sapi_name(), 'cgi') !== false && !empty($_SERVER['REQUEST_URI']) &&
				    (!ini_get('cgi.fix_pathinfo') || version_compare(PHP_VERSION, '5.2.4', '<'))) {
					// CGI on PHP pre-5.2.4 with cgi.fix_pathinfo = 0.

					// In pre-rev. 240885 of main_cgi.c, SCRIPT_NAME doesn't conform the PHP spec.,
					// therefore we use PHP_SELF instead.
					$base['path'] =  rtrim(dirname(str_replace(array('"', '<', '>', "'"), '', $_SERVER["PHP_SELF"])), '/\\');
				} else {
					// Since PHP 5.2.4 we can trust SCRIPT_NAME;  it conforms the spec.
					$base['path'] =  rtrim(dirname($_SERVER['SCRIPT_NAME']), '/\\');
				}
			}
		}
